rules:
  - name: "Check for null eventId"
    field: "eventId"
    check: "not_null"
    criticality: "critical"
    action: "fail"

  - name: "Check for null eventName"
    field: "eventName"
    check: "not_null"
    criticality: "critical"
    action: "fail"

  - name: "Check for null eventType"
    field: "eventType"
    check: "not_null"
    criticality: "critical"
    action: "fail"

  - name: "Check for null venueName"
    field: "venueName"
    check: "not_null"
    criticality: "critical"
    action: "fail"

  - name: "Check latitude range"
    field: "latitude"
    check: "range"
    min: -90
    max: 90
    criticality: "error"
    action: "quarantine"

  - name: "Check longitude range"
    field: "longitude"
    check: "range"
    min: -180
    max: 180
    criticality: "error"
    action: "quarantine"

  - name: "Check startTime is before endTime"
    check: "custom"
    condition: "startTime < endTime"
    criticality: "error"
    action: "quarantine"

  - name: "Check expectedAttendance range"
    field: "expectedAttendance"
    check: "range"
    min: 0
    max: 1000000
    criticality: "warning"
    action: "log"

  - name: "Check for valid organizer email"
    field: "organizerEmail"
    check: "regex"
    pattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
    criticality: "warning"
    action: "log"

  - name: "Check ticketPrice is positive for paid events"
    check: "custom"
    condition: "isPaidEvent == false or (isPaidEvent == true and ticketPrice > 0)"
    criticality: "error"
    action: "quarantine"

  - name: "Check parkingCapacity is positive when dedicated parking is available"
    check: "custom"
    condition: "hasDedicatedParking == false or (hasDedicatedParking == true and parkingCapacity > 0)"
    criticality: "warning"
    action: "log"

  - name: "Check for duplicate events"
    check: "unique"
    fields: 
      - "eventId"
      - "startTime"
    criticality: "warning"
    action: "deduplicate"

  - name: "Check lastUpdated is not in the future"
    check: "custom"
    condition: "lastUpdated <= current_timestamp()"
    criticality: "error"
    action: "quarantine"

actions:
  fail:
    description: "Halt the process and raise an exception"
  log:
    description: "Log the issue and continue processing"
  quarantine:
    description: "Move the problematic records to a quarantine area"
  deduplicate:
    description: "Remove duplicate records keeping the latest"